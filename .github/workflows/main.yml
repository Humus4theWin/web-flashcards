name: Deploy Static HTML and Android App via FTP and Play Store

on:
  push:
    branches:
      - main

jobs:
  deploy-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install FTP Client
        run: sudo apt-get update && sudo apt-get install -y ftp

      - name: Upload Repository Content to FTP Server
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          ftp -inv $FTP_SERVER <<EOF
          user $FTP_USERNAME $FTP_PASSWORD
          # Delete all existing files in the root folder on the FTP server
          mdelete *

          # Navigate to the Frontend folder locally and upload its content to the root of the server
          lcd Frontend
          mput *

          # Navigate to the image folder locally and upload its content to the root of the server
          lcd image
          mkdir image
          cd image
          mput *

          bye
          EOF

  build-and-deploy-app:
    name: Build and Deploy Android App
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Get mapskey.properties from secrets
        run: >-
          echo "${{ secrets.MAPS_API_KEY }}" >
          $GITHUB_WORKSPACE/mapskey.properties
      - name: Setup JDK 20
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 20
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Setup Gradle Cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      - name: Bump Version Code
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle.kts
          versionCode: "${{ github.run_number }}"
          versionName: 1.0.0
      - name: Build prodRelease
        run: ./gradlew bundleRelease
      - name: Sign AAb
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: "${{ secrets.KEYSTORE }}"
          alias: "${{ secrets.SIGNING_KEY_ALIAS }}"
          keyStorePassword: "${{ secrets.SIGNING_STORE_PASSWORD }}"
          keyPassword: "${{ secrets.SIGNING_KEY_PASSWORD }}"
      - name: Upload app bundle as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle
          path: app/build/outputs/bundle/release/app-release.aab
      - run: "echo Build status report=${{ job.status }}"

  deploy:
    name: Job_2 - Deploy aab to playstore
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download app bundle from artifact
        uses: actions/download-artifact@v2
        with:
          name: app-bundle
      - name: Publish to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: "${{ secrets.SERVICE_ACCOUNT_JSON }}"
          packageName: com.uxstate.countriespad
          releaseFiles: "${{ github.workspace }}/app-release.aab"
          track: production
